# 서버 설정
server:
  port: 8081  # 애플리케이션의 포트를 설정 (기본값: 8081)
  servlet:
    contextPath: /  # 애플리케이션의 기본 contextPath 설정. "/"는 루트로 설정된다는 의미.

# SpringDoc (Swagger) 설정
springdoc:
  # Swagger UI 활성화 설정
  swagger-ui:
    enabled: true  # Swagger UI를 활성화
    urls:
      default: /v3/api-docs  # 기본 Swagger API 문서 경로 설정

  # API Docs 설정
  api-docs:
    enabled: true  # Swagger 문서를 생성할지 여부 (기본값: true)
    path: /api-docs/json  # 생성된 Swagger API 문서의 경로를 지정 (JSON 형태로 제공)
    groups:
      enabled: true  # 그룹별로 API 문서를 생성할지 여부 (기본값: true)

  # Swagger 문서 캐싱 비활성화 설정
  cache:
    disabled: true  # Swagger 문서의 캐싱을 비활성화 (기본값: false)
  default-produces-media-type: application/json;charset=UTF-8  # 기본 응답 미디어 타입 (JSON)
  default-consumes-media-type: application/json;charset=UTF-8  # 기본 요청 미디어 타입 (JSON)
  packages-to-scan: com.dev.hobby.user.interfaces  # Swagger 문서를 생성할 컨트롤러가 포함된 패키지 지정
  paths-to-match: /**  # 모든 경로를 Swagger 문서화에 포함

# Spring Boot 설정
spring:
  # MySQL 설정 (CMS: Command Side)
  datasource:
    url: "jdbc:p6spy:mysql://localhost:3306/users"  # MySQL 연결 URL 설정
    username: "root"  # MySQL 사용자명
    password: "root1234"  # MySQL 비밀번호
    driver-class-name: "com.p6spy.engine.spy.P6SpyDriver"  # P6Spy JDBC 드라이버를 사용하여 SQL 쿼리 로그를 캡처
    hikari:
      maximum-pool-size: 10

  # MongoDB 설정 (R: Query Side)
  data:
    mongodb:
      uri: "mongodb://root:root1234@localhost:27017/users?authSource=admin"  # MongoDB 연결 URI 설정

  # Redis 설정 (락관리)
  redis:
    host: localhost
    port: 6379
    password: root1234


  kafka:
    bootstrap-servers: localhost:9092  # Kafka 브로커 주소
    consumer:
      group-id: user-service-group     # Kafka Consumer 그룹 ID
      auto-offset-reset: earliest      # 초기 오프셋 설정 (earliest: 처음부터)
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    listener:
      ack-mode: manual  # Kafka Listener 수동 커밋 (manual or record 권장)

  # JPA 설정
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect  # MySQL 데이터베이스 플랫폼 지정
    open-in-view: false  # JPA 세션을 열어두지 않음 (LazyLoading 방지)
    show-sql: false  # SQL 쿼리 출력 여부
    hibernate:
      format_sql: true  # SQL 포매팅 활성화
      use_sql_comments: true  # SQL 주석 사용
#      ddl-auto: create-drop  # Hibernate가 데이터베이스 스키마를 자동으로 업데이트
      ddl-auto: create  # Hibernate가 데이터베이스 스키마를 자동으로 업데이트
    properties:
      hibernate:
        format_sql: true  # SQL 포매팅 설정

  # 로그 설정 (P6Spy 로깅 활성화)
  logging:
    level:
      com.p6spy: DEBUG  # P6Spy 로그 레벨을 DEBUG로 설정하여 SQL 쿼리 출력
      org.springframework.data.mongodb.core.MongoTemplate: DEBUG # MongoTemplate을 통한 쿼리 실행 로그 (Spring Data MongoDB 핵심 컴포넌트)
      org.mongodb.driver.protocol.command: DEBUG # MongoDB 드라이버에서 실행된 명령(command)의 내용을 보여줌 (예: find, insert 등)
      org.mongodb.driver.protocol.query: DEBUG # MongoDB 드라이버의 쿼리 요청 처리에 대한 상세 로그
      org.mongodb.driver.connection: DEBUG # MongoDB와의 연결(Connection) 생성, 풀링, 해제 관련 정보

---

# 로컬에서 사용할 포트 설정
server:
  port: 8082  # 로컬 환경에서 사용할 포트는 8082로 설정


# 로컬 환경 설정
# 로컬 환경에서만 적용되는 설정을 정의합니다. `on-profile`으로 `local` 또는 `default` 프로필에 해당하는 경우에만 적용됩니다.
spring:
  config:
    activate:
      on-profile: local, default  # local 또는 default 프로필에서만 활성화


---

# dev 사용할 포트 설정
server:
  port: 8083  # 로컬 환경에서 사용할 포트는 8082로 설정


# 로컬 환경 설정
# 로컬 환경에서만 적용되는 설정을 정의합니다. `on-profile`으로 `local` 또는 `default` 프로필에 해당하는 경우에만 적용됩니다.
spring:
  config:
    activate:
      on-profile: dev  # local 또는 default 프로필에서만 활성화

